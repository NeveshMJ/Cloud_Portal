<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Manage Students - Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    body {
      background: #f8f9fa;
    }
    
    .admin-header {
      background: linear-gradient(45deg, #1e3a8a, #3b82f6);
      color: white;
      padding: 2rem;
      border-radius: 15px;
      margin-bottom: 2rem;
    }
    
    .card {
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
      border: none;
    }
    
    .btn-admin {
      background: linear-gradient(45deg, #1e3a8a, #3b82f6);
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 10px;
      font-weight: 600;
      transition: transform 0.3s ease;
    }
    
    .btn-admin:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.2);
      color: white;
    }
    
    .table th {
      background: #1e3a8a;
      color: white;
      border: none;
    }
    
    .table td {
      vertical-align: middle;
    }
  </style>
</head>
<body>
  <div class="container-fluid py-4">
    <div class="admin-header d-flex justify-content-between align-items-center">
      <div>
        <h2><i class="fas fa-users me-3"></i>Manage Students</h2>
        <p class="mb-0">Add and manage student accounts</p>
      </div>
      <div>
        <a href="/admin/dashboard" class="btn btn-outline-light">
          <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
        </a>
        <button class="btn btn-outline-light" onclick="logout()">
          <i class="fas fa-sign-out-alt me-2"></i>Logout
        </button>
      </div>
    </div>

    <!-- Add Student Form -->
    <div class="card mb-4">
      <div class="card-header">
        <h5><i class="fas fa-user-plus me-2"></i>Add New Student</h5>
      </div>
      <div class="card-body">
        <form id="addStudentForm">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="roll_num" class="form-label">Roll Number</label>
                <input type="text" class="form-control" id="roll_num" name="roll_num" required>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="name" class="form-label">Full Name</label>
                <input type="text" class="form-control" id="name" name="name" required>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="batch_year" class="form-label">Batch Year</label>
                <select class="form-control" id="batch_year" name="batch_year" required>
                  <option value="">Select Batch Year</option>
                  <option value="23-27">2023-2027</option>
                  <option value="24-28">2024-2028</option>
                  <option value="25-29">2025-2029</option>
                  <option value="26-30">2026-2030</option>
                  <option value="27-31">2027-2031</option>
                </select>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="email" class="form-label">Gmail Address</label>
                <input type="email" class="form-control" id="email" name="email" placeholder="student@gmail.com" required>
                <small class="text-muted">Must be a Gmail address</small>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="department" class="form-label">Department</label>
                <select class="form-control" id="department" name="department" required>
                  <option value="">Select Department</option>
                  <option value="Computer Science">Computer Science</option>
                  <option value="Information Technology">Information Technology</option>
                  <option value="Electronics">Electronics</option>
                  <option value="Mechanical">Mechanical</option>
                  <option value="Civil">Civil</option>
                  <option value="Electrical">Electrical</option>
                </select>
              </div>
            </div>
          </div>
          <button type="submit" class="btn btn-admin">
            <i class="fas fa-plus me-2"></i>Add Student
          </button>
        </form>
        <div id="addStudentMessage"></div>
      </div>
    </div>

    <!-- Students List -->
    <div class="card">
      <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
          <h5><i class="fas fa-list me-2"></i>Students List</h5>
          <div class="d-flex gap-2">
            <input type="text" class="form-control" id="searchInput" placeholder="Search students..." style="width: 250px;" onkeyup="searchStudents()">
            <select class="form-select" id="batchFilter" onchange="filterStudents()">
              <option value="">All Batches</option>
              <option value="23-27">2023-2027</option>
              <option value="24-28">2024-2028</option>
              <option value="25-29">2025-2029</option>
              <option value="26-30">2026-2030</option>
              <option value="27-31">2027-2031</option>
            </select>
            <button class="btn btn-danger" id="deleteSelectedBtn" onclick="deleteSelectedStudents()" style="display: none;">
              <i class="fas fa-trash me-2"></i>Delete Selected
            </button>
            <button class="btn btn-secondary" onclick="clearFilters()">
              <i class="fas fa-times me-2"></i>Clear
            </button>
          </div>
        </div>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-striped">
            <thead>
              <tr>
                <th>
                  <input type="checkbox" id="selectAll" onchange="toggleSelectAll()">
                </th>
                <th>Roll Number</th>
                <th>Name</th>
                <th>Email</th>
                <th>Department</th>
                <th>Batch Year</th>
                <th>Created</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="studentsTableBody">
              <% if (students.length > 0) { %>
                <% students.forEach(student => { %>
                  <tr data-batch="<%= student.batch_year || '' %>">
                    <td>
                      <input type="checkbox" class="student-checkbox" value="<%= student._id %>">
                    </td>
                    <td><strong><%= student.student_id %></strong></td>
                    <td><%= student.name %></td>
                    <td><%= student.email %></td>
                    <td><%= student.department %></td>
                    <td><%= student.batch_year || 'N/A' %></td>
                    <td><%= new Date(student.created_at).toLocaleDateString() %></td>
                    <td>
                      <button class="btn btn-danger btn-sm" onclick="deleteStudent('<%= student._id %>')">
                        <i class="fas fa-trash"></i>
                      </button>
                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="8" class="text-center">No students found</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.getElementById('addStudentForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData);
      
      try {
        const response = await fetch('/admin/students', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
          document.getElementById('addStudentMessage').innerHTML = 
            '<div class="alert alert-success mt-3">' + result.message + '</div>';
          e.target.reset();
          setTimeout(() => {
            location.reload();
          }, 2000);
        } else {
          document.getElementById('addStudentMessage').innerHTML = 
            '<div class="alert alert-danger mt-3">' + (result.error || 'Failed to add student. Please try again.') + '</div>';
        }
      } catch (error) {
        document.getElementById('addStudentMessage').innerHTML = 
          '<div class="alert alert-danger mt-3">Error adding student. Please try again.</div>';
      }
    });

    function filterStudents() {
      const selectedBatch = document.getElementById('batchFilter').value;
      const searchTerm = document.getElementById('searchInput').value.toLowerCase();
      const rows = document.querySelectorAll('#studentsTableBody tr');
      
      rows.forEach(row => {
        const batchMatch = selectedBatch === '' || row.dataset.batch === selectedBatch;
        
        // Get text content from all cells for search
        const rowText = row.textContent.toLowerCase();
        const searchMatch = searchTerm === '' || rowText.includes(searchTerm);
        
        if (batchMatch && searchMatch) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
      
      updateDeleteButton();
      updateResultsCount();
    }

    function searchStudents() {
      filterStudents(); // Use the same filtering logic
    }

    function clearFilters() {
      document.getElementById('searchInput').value = '';
      document.getElementById('batchFilter').value = '';
      document.getElementById('selectAll').checked = false;
      
      const rows = document.querySelectorAll('#studentsTableBody tr');
      rows.forEach(row => {
        row.style.display = '';
        const checkbox = row.querySelector('.student-checkbox');
        if (checkbox) {
          checkbox.checked = false;
        }
      });
      
      updateDeleteButton();
      updateResultsCount();
    }

    function updateResultsCount() {
      const visibleRows = Array.from(document.querySelectorAll('#studentsTableBody tr')).filter(row => 
        row.style.display !== 'none' && !row.querySelector('td[colspan]')
      );
      
      const totalRows = document.querySelectorAll('#studentsTableBody tr:not([style*="display: none"])').length;
      
      // Update or create results counter
      let counter = document.getElementById('resultsCounter');
      if (!counter) {
        counter = document.createElement('small');
        counter.id = 'resultsCounter';
        counter.className = 'text-muted ms-2';
        document.querySelector('.card-header h5').appendChild(counter);
      }
      
      const hasNoDataRow = document.querySelector('#studentsTableBody tr td[colspan]');
      if (hasNoDataRow && hasNoDataRow.closest('tr').style.display !== 'none') {
        counter.textContent = '(0 students found)';
      } else {
        counter.textContent = `(${visibleRows.length} students found)`;
      }
    }

    function toggleSelectAll() {
      const selectAll = document.getElementById('selectAll');
      const checkboxes = document.querySelectorAll('.student-checkbox');
      const visibleCheckboxes = Array.from(checkboxes).filter(cb => 
        cb.closest('tr').style.display !== 'none'
      );
      
      visibleCheckboxes.forEach(checkbox => {
        checkbox.checked = selectAll.checked;
      });
      
      updateDeleteButton();
    }

    function updateDeleteButton() {
      const checkedBoxes = document.querySelectorAll('.student-checkbox:checked');
      const deleteBtn = document.getElementById('deleteSelectedBtn');
      
      if (checkedBoxes.length > 0) {
        deleteBtn.style.display = 'block';
      } else {
        deleteBtn.style.display = 'none';
      }
    }

    // Add event listeners to checkboxes
    document.addEventListener('change', function(e) {
      if (e.target.classList.contains('student-checkbox')) {
        updateDeleteButton();
      }
    });

    // Initialize results counter on page load
    document.addEventListener('DOMContentLoaded', function() {
      updateResultsCount();
    });

    async function deleteStudent(studentId) {
      if (!confirm('Are you sure you want to delete this student?')) {
        return;
      }
      
      try {
        const response = await fetch(`/admin/students/${studentId}`, {
          method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
          location.reload();
        } else {
          alert('Failed to delete student: ' + (result.error || 'Unknown error'));
        }
      } catch (error) {
        alert('Error deleting student. Please try again.');
      }
    }

    async function deleteSelectedStudents() {
      const checkedBoxes = document.querySelectorAll('.student-checkbox:checked');
      const studentIds = Array.from(checkedBoxes).map(cb => cb.value);
      
      if (studentIds.length === 0) {
        alert('Please select students to delete.');
        return;
      }
      
      if (!confirm(`Are you sure you want to delete ${studentIds.length} selected students?`)) {
        return;
      }
      
      try {
        const response = await fetch('/admin/students/bulk-delete', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ studentIds })
        });
        
        const result = await response.json();
        
        if (result.success) {
          location.reload();
        } else {
          alert('Failed to delete students: ' + (result.error || 'Unknown error'));
        }
      } catch (error) {
        alert('Error deleting students. Please try again.');
      }
    }
    async function logout() {
      try {
        const response = await fetch('/admin/logout', { method: 'POST' });
        if (response.ok) {
          window.location.href = '/';
        }
      } catch (error) {
        console.error('Logout error:', error);
      }
    }
  </script>
</body>
</html>