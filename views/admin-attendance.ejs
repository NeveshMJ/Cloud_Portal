<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Attendance Management - Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      background: #f8f9fa;
      font-family: 'Inter', sans-serif;
    }
    
    .admin-header {
      background: linear-gradient(45deg, #1e3a8a, #3b82f6);
      color: white;
      padding: 2rem;
      border-radius: 15px;
      margin-bottom: 2rem;
    }
    
    .attendance-card {
      background: white;
      border-radius: 15px;
      padding: 2rem;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
      border: none;
      margin-bottom: 2rem;
    }
    
    .btn-admin {
      background: linear-gradient(45deg, #1e3a8a, #3b82f6);
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 10px;
      font-weight: 600;
      transition: transform 0.3s ease;
    }
    
    .btn-admin:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.2);
      color: white;
    }
    
    .student-row {
      padding: 1rem;
      border-radius: 12px;
      margin-bottom: 0.5rem;
      background: #f8f9fa;
      transition: all 0.3s ease;
    }
    
    .student-row:hover {
      background: #e9ecef;
      transform: translateX(5px);
    }
    
    .attendance-btn {
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      font-weight: 600;
      margin: 0 0.25rem;
      transition: all 0.3s ease;
    }
    
    .btn-present {
      background: #dcfce7;
      color: #166534;
    }
    
    .btn-present:hover,
    .btn-present.active {
      background: #16a34a;
      color: white;
    }
    
    .btn-absent {
      background: #fee2e2;
      color: #991b1b;
    }
    
    .btn-absent:hover,
    .btn-absent.active {
      background: #dc2626;
      color: white;
    }
    
    .btn-late {
      background: #fef3c7;
      color: #92400e;
    }
    
    .btn-late:hover,
    .btn-late.active {
      background: #f59e0b;
      color: white;
    }

    .upload-area {
      border: 2px dashed #cbd5e1;
      border-radius: 12px;
      padding: 2rem;
      text-align: center;
      background: #f8fafc;
      transition: all 0.3s ease;
      cursor: pointer;
      margin-top: 1rem;
    }
    
    .upload-area:hover {
      border-color: #3b82f6;
      background: #eff6ff;
    }
    
    .upload-area.dragover {
      border-color: #1e3a8a;
      background: #dbeafe;
    }
  </style>
</head>
<body>
  <div class="container-fluid py-4">
    <div class="admin-header d-flex justify-content-between align-items-center">
      <div>
        <h2><i class="fas fa-calendar-check me-3"></i>Attendance Management</h2>
        <p class="mb-0">Mark and manage student attendance</p>
      </div>
      <div>
        <a href="/admin/dashboard" class="btn btn-outline-light">
          <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
        </a>
        <button class="btn btn-outline-light" onclick="logout()">
          <i class="fas fa-sign-out-alt me-2"></i>Logout
        </button>
      </div>
    </div>

    <!-- Attendance Marking Form -->
    <div class="attendance-card">
      <h5><i class="fas fa-plus-circle me-2"></i>Mark Today's Attendance</h5>
      <form id="attendanceForm">
        <div class="row mb-4">
          <div class="col-md-3">
            <label for="date" class="form-label">Date</label>
            <input type="date" class="form-control" id="date" name="date" required>
          </div>
          <div class="col-md-3">
            <label for="subject" class="form-label">Subject</label>
            <select class="form-control" id="subject" name="subject" required>
              <option value="">Select Subject</option>
              <option value="Cloud Computing Fundamentals">Cloud Computing Fundamentals</option>
              <option value="AWS Services">AWS Services</option>
              <option value="Azure Administration">Azure Administration</option>
              <option value="DevOps Practices">DevOps Practices</option>
              <option value="Google Cloud Platform">Google Cloud Platform</option>
              <option value="Container Technologies">Container Technologies</option>
            </select>
          </div>
          <div class="col-md-3">
            <label for="batch" class="form-label">Batch</label>
            <select class="form-control" id="batch" name="batch" required>
              <option value="">Select Batch</option>
              <option value="23-27">2023-2027</option>
              <option value="24-28">2024-2028</option>
              <option value="25-29">2025-2029</option>
              <option value="26-30">2026-2030</option>
            </select>
          </div>
          <div class="col-md-3">
            <label for="time" class="form-label">Time</label>
            <input type="time" class="form-control" id="time" name="time" required>
          </div>
        </div>
        
        <button type="button" class="btn btn-admin" onclick="loadStudentsForAttendance()">
          <i class="fas fa-users me-2"></i>Load Students
        </button>
      </form>
    </div>

    <!-- Students Attendance List -->
    <div class="attendance-card" id="studentsAttendanceCard" style="display: none;">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h5><i class="fas fa-list-check me-2"></i>Mark Attendance</h5>
        <div>
          <button class="btn btn-success btn-sm me-2" onclick="markAllPresent()">
            <i class="fas fa-check-double me-2"></i>Mark All Present
          </button>
          <button class="btn btn-admin" onclick="saveAttendance()">
            <i class="fas fa-save me-2"></i>Save Attendance
          </button>
        </div>
      </div>
      
      <div id="studentsList">
        <!-- Students will be loaded here -->
      </div>
      
      <div id="attendanceMessage"></div>
    </div>

    <!-- PDF Upload Section -->
    <div class="attendance-card" id="pdfUploadCard" style="display: none;">
      <h5><i class="fas fa-file-pdf me-2"></i>Upload Attendance PDF</h5>
      <p class="text-muted">Upload the attendance sheet as a PDF document for record keeping.</p>
      
      <form id="pdfUploadForm" enctype="multipart/form-data">
        <div class="upload-area" onclick="document.getElementById('pdfInput').click()">
          <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
          <h6>Click to upload or drag and drop</h6>
          <p class="text-muted">PDF files only, up to 10MB</p>
          <input type="file" id="pdfInput" name="attendancePdf" accept=".pdf" style="display: none;" onchange="handlePdfSelect(event)">
          <div id="selectedPdf" class="mt-2"></div>
        </div>
        
        <div class="text-center mt-3">
          <button type="submit" class="btn btn-admin">
            <i class="fas fa-upload me-2"></i>Upload PDF
          </button>
        </div>
      </form>
      <div id="pdfUploadMessage"></div>
    </div>

    <!-- Attendance Reports -->
    <div class="attendance-card">
      <h5><i class="fas fa-chart-bar me-2"></i>Attendance Reports</h5>
      <div class="row">
        <div class="col-md-4">
          <div class="card text-center">
            <div class="card-body">
              <i class="fas fa-users fa-3x text-primary mb-3"></i>
              <h6>Daily Report</h6>
              <button class="btn btn-outline-primary btn-sm">Generate</button>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="card text-center">
            <div class="card-body">
              <i class="fas fa-calendar-week fa-3x text-success mb-3"></i>
              <h6>Weekly Report</h6>
              <button class="btn btn-outline-success btn-sm">Generate</button>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="card text-center">
            <div class="card-body">
              <i class="fas fa-calendar-alt fa-3x text-warning mb-3"></i>
              <h6>Monthly Report</h6>
              <button class="btn btn-outline-warning btn-sm">Generate</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Set today's date as default
    document.getElementById('date').valueAsDate = new Date();
    
    let studentsData = [];
    let attendanceData = {};

    async function loadStudentsForAttendance() {
      const batch = document.getElementById('batch').value;
      const subject = document.getElementById('subject').value;
      const date = document.getElementById('date').value;
      
      if (!batch || !subject || !date) {
        alert('Please fill in all fields before loading students.');
        return;
      }
      
      try {
        const response = await fetch(`/api/admin/students-by-batch?batch=${batch}`);
        const students = await response.json();
        
        if (students.length === 0) {
          alert('No students found for the selected batch.');
          return;
        }
        
        studentsData = students;
        renderStudentsList();
        document.getElementById('studentsAttendanceCard').style.display = 'block';
        
      } catch (error) {
        console.error('Error loading students:', error);
        alert('Error loading students. Please try again.');
      }
    }

    function renderStudentsList() {
      const container = document.getElementById('studentsList');
      
      container.innerHTML = studentsData.map(student => `
        <div class="student-row">
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <h6 class="mb-1">${student.name}</h6>
              <small class="text-muted">ID: ${student.student_id} | ${student.department}</small>
            </div>
            <div class="attendance-buttons">
              <button class="attendance-btn btn-present" onclick="markAttendance('${student.student_id}', 'present')">
                <i class="fas fa-check me-1"></i>Present
              </button>
              <button class="attendance-btn btn-absent" onclick="markAttendance('${student.student_id}', 'absent')">
                <i class="fas fa-times me-1"></i>Absent
              </button>
              <button class="attendance-btn btn-late" onclick="markAttendance('${student.student_id}', 'late')">
                <i class="fas fa-clock me-1"></i>Late
              </button>
            </div>
          </div>
        </div>
      `).join('');
    }

    function markAttendance(studentId, status) {
      attendanceData[studentId] = status;
      
      // Update button states
      const studentRow = document.querySelector(`[onclick*="${studentId}"]`).closest('.student-row');
      const buttons = studentRow.querySelectorAll('.attendance-btn');
      
      buttons.forEach(btn => btn.classList.remove('active'));
      
      const activeButton = studentRow.querySelector(`[onclick*="${status}"]`);
      activeButton.classList.add('active');
    }

    function markAllPresent() {
      studentsData.forEach(student => {
        markAttendance(student.student_id, 'present');
      });
    }

    async function saveAttendance() {
      const date = document.getElementById('date').value;
      const subject = document.getElementById('subject').value;
      const batch = document.getElementById('batch').value;
      const time = document.getElementById('time').value;
      
      if (Object.keys(attendanceData).length === 0) {
        alert('Please mark attendance for at least one student.');
        return;
      }
      
      try {
        const response = await fetch('/admin/attendance/save', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            date,
            subject,
            batch,
            time,
            attendance: attendanceData
          })
        });
        
        const result = await response.json();
        
        if (result.success) {
          document.getElementById('attendanceMessage').innerHTML = 
            '<div class="alert alert-success mt-3"><i class="fas fa-check-circle me-2"></i>Attendance saved successfully!</div>';
          
          // Show PDF upload section
          document.getElementById('pdfUploadCard').style.display = 'block';
          
          // Reset form after delay
          setTimeout(() => {
            document.getElementById('attendanceForm').reset();
            document.getElementById('studentsAttendanceCard').style.display = 'none';
            document.getElementById('pdfUploadCard').style.display = 'none';
            attendanceData = {};
            document.getElementById('attendanceMessage').innerHTML = '';
            document.getElementById('date').valueAsDate = new Date();
          }, 5000);
        } else {
          document.getElementById('attendanceMessage').innerHTML = 
            '<div class="alert alert-danger mt-3"><i class="fas fa-exclamation-triangle me-2"></i>' + (result.error || 'Error saving attendance') + '</div>';
        }
        
      } catch (error) {
        console.error('Error saving attendance:', error);
        document.getElementById('attendanceMessage').innerHTML = 
          '<div class="alert alert-danger mt-3"><i class="fas fa-exclamation-triangle me-2"></i>Error saving attendance. Please try again.</div>';
      }
    }

    function handlePdfSelect(event) {
      const file = event.target.files[0];
      if (file) {
        if (file.type !== 'application/pdf') {
          alert('Please select a PDF file only.');
          event.target.value = '';
          return;
        }
        
        const fileSize = (file.size / 1024 / 1024).toFixed(2);
        if (fileSize > 10) {
          alert('File size must be less than 10MB.');
          event.target.value = '';
          return;
        }
        
        document.getElementById('selectedPdf').innerHTML = `
          <div class="alert alert-info">
            <i class="fas fa-file-pdf me-2"></i>Selected: ${file.name} (${fileSize} MB)
          </div>
        `;
      }
    }

    // Drag and drop functionality for PDF
    const uploadArea = document.querySelector('.upload-area');
    
    uploadArea.addEventListener('dragover', (e) => {
      e.preventDefault();
      uploadArea.classList.add('dragover');
    });
    
    uploadArea.addEventListener('dragleave', () => {
      uploadArea.classList.remove('dragover');
    });
    
    uploadArea.addEventListener('drop', (e) => {
      e.preventDefault();
      uploadArea.classList.remove('dragover');
      
      const files = e.dataTransfer.files;
      if (files.length > 0) {
        const file = files[0];
        if (file.type === 'application/pdf') {
          document.getElementById('pdfInput').files = files;
          handlePdfSelect({ target: { files } });
        } else {
          alert('Please drop a PDF file only.');
        }
      }
    });

    document.getElementById('pdfUploadForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const date = document.getElementById('date').value;
      const subject = document.getElementById('subject').value;
      const batch = document.getElementById('batch').value;
      
      formData.append('date', date);
      formData.append('subject', subject);
      formData.append('batch', batch);
      
      try {
        const response = await fetch('/admin/attendance/upload-pdf', {
          method: 'POST',
          body: formData
        });
        
        const result = await response.json();
        
        if (result.success) {
          document.getElementById('pdfUploadMessage').innerHTML = 
            '<div class="alert alert-success mt-3"><i class="fas fa-check-circle me-2"></i>PDF uploaded successfully!</div>';
          
          e.target.reset();
          document.getElementById('selectedPdf').innerHTML = '';
        } else {
          document.getElementById('pdfUploadMessage').innerHTML = 
            '<div class="alert alert-danger mt-3"><i class="fas fa-exclamation-triangle me-2"></i>' + (result.error || 'Error uploading PDF') + '</div>';
        }
        
      } catch (error) {
        console.error('Error uploading PDF:', error);
        document.getElementById('pdfUploadMessage').innerHTML = 
          '<div class="alert alert-danger mt-3"><i class="fas fa-exclamation-triangle me-2"></i>Error uploading PDF. Please try again.</div>';
      }
    });

    async function logout() {
      try {
        const response = await fetch('/admin/logout', { method: 'POST' });
        if (response.ok) {
          window.location.href = '/';
        }
      } catch (error) {
        console.error('Logout error:', error);
      }
    }
  </script>
</body>
</html>